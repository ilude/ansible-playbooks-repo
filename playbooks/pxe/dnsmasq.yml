- hosts: pxe
  become: yes
  become_method: sudo  

  tasks:
    - name: stop service systemd-resolved, if running
      systemd:
        name: systemd-resolved
        state: stopped
        enabled: no
        daemon_reload: yes

    - stat:
        path: /etc/resolv.conf
      register: resolv

    - name: Remove symlink
      when: resolv.stat.islnk is defined and resolv.stat.islnk
      file:
        path: /etc/resolv.conf
        state: absent

    - name: ensure file exists
      copy:
        content: "nameserver 9.9.9.9"
        dest: /etc/resolv.conf
        force: no
        group: root
        owner: root
        mode: 0755

    - name: "Install packages and dependences"
      apt:
        pkg:
          - dnsmasq
          - ufw
          - net-tools
          - tftp
        state: present

    - set_fact:
        mask_cidr: "{{ ip | ipaddr('network/prefix') }}"
      vars:
        ip: "{{ ansible_eth1.ipv4.address }}/{{ ansible_eth1.ipv4.netmask }}"

    - name: Copy dnsmasq config
      template:
        src: pxe.conf
        dest: /etc/dnsmasq.d/pxe.conf
        group: root
        owner: root
        mode: 0755

    - name: Get username for current user
      command: whoami
      changed_when: false
      become: false
      register: id

    - name: Set a fact with the username.
      set_fact:
        current_user: "{{ id.stdout }}"  

    - name: Create /apps/tftp
      file:
        path: /apps/tftp
        state: directory
        owner: "{{ current_user }}"
        group: "{{ current_user }}"

    - name: Download and unpack netboot.tar.gz
      unarchive:
        src: http://archive.ubuntu.com/ubuntu/dists/xenial/main/installer-amd64/current/images/netboot/netboot.tar.gz
        dest: /apps/tftp/
        mode: '0644'
        remote_src: yes
        creates: /apps/tftp/pxelinux.cfg/

    - name: Copy pxelinux.cfg
      template:
        src: pxelinux.cfg.default.j2
        dest: /apps/tftp/pxelinux.cfg/default
        group: root
        owner: root
        mode: 0755

    - name: Download ubuntu 20.04 server iso
      get_url:
        url: https://releases.ubuntu.com/20.04/ubuntu-20.04.1-live-server-amd64.iso
        dest: /apps/tftp/ubuntu-20.04.1-live-server-amd64.iso
        mode: '0440'
       

    - name: Start dnsmasq
      systemd:
        name: dnsmasq
        state: started
        enabled: yes
        daemon_reload: yes

        

     

    
