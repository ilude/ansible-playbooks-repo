listen-address={{ ansible_eth1.ipv4.address }}
interface={{ ansible_eth1.device }}
bind-interfaces
domain=pxe.lab

dhcp-range={{ ansible_eth1.ipv4.address | ipmath(10) }},{{ mask_cidr | ipaddr('last_usable') }},{{ ansible_eth1.ipv4.netmask }},24h

# Set default gateway
dhcp-option=3,{{ ansible_eth1.ipv4.address }}

# Set DNS servers to announce
dhcp-option=6,{{ ansible_eth1.ipv4.address }}

dhcp-host=00:15:5d:10:43:14,ignore

# Set the boot filename for netboot/PXE. You will only need
# this is you want to boot machines over the network and you will need
# a TFTP server; either dnsmasq's built in TFTP server or an
# external one. (See below for how to enable the TFTP server.)
dhcp-boot=bios/pxelinux.0
 
# Loads pxelinux.0 from dnsmasq TFTP server.
#pxe-service=x86PC, "Install Linux", pxelinux
 
# Set the root directory for files available via FTP.
enable-tftp
tftp-root=/apps/pxe/www/tftp

# Logging.
log-facility=/var/log/dnsmasq.log   # logfile path.
log-async
log-queries # log queries.
log-dhcp    # log dhcp related messages.

#--Detect architecture and send the correct bootloader file 
dhcp-vendorclass=UEFI,PXEClient:Arch:00007
dhcp-vendorclass=UEFI64,PXEClient:Arch:00009
dhcp-boot=net:UEFI,bootx64.efi,,{{ ansible_eth1.ipv4.address }}
dhcp-boot=net:UEFI64,bootx64.efi,,{{ ansible_eth1.ipv4.address }}
